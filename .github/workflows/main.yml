name: Test & Release

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install .[test]
          python -m pip install pytest-github-actions-annotate-failures

      - name: pytest
        run: python -m pytest -v tests

  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install mypy & stubs packages
        run: python -m pip install .[mypy]
      - name: mypy
        run: python -m mypy --ignore-missing-imports semantic_release

  beautify:
    name: Beautify
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test, mypy]
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}

    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Black
        run: python -m pip install black

      - name: Beautify with Black
        run: python -m black .

      - name: Install isort
        run: python -m pip install "isort >=4,<5"

      - name: Sort imports
        run: python -m isort -y -rc .

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: beautify ${{ github.sha }}'
          name: github-actions
          email: action@github.com

      - name: Get new SHA
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "::set-output name=SHA::$new_sha"

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test, mypy, beautify]
    if: github.repository == 'relekang/python-semantic-release'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ needs.beautify.outputs.new_sha }}
    - name: Fetch master
      run: git fetch --prune origin +refs/heads/master:refs/remotes/origin/master
    - name: Python Semantic Release
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository_username: ${{ secrets.PYPI_USERNAME }}
        repository_password: ${{ secrets.PYPI_PASSWORD }}
