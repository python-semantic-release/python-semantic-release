name: Test & Release

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python -m pip install .[test]
      - name: pytest
        run: python -m pytest -v tests

  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install mypy
        run: python -m pip install mypy
      - name: mypy
        run: python -m mypy --ignore-missing-imports semantic_release

  beautify:
    name: Beautify
    runs-on: ubuntu-latest
    needs: [test, mypy]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Format code
        run: |
          python -m pip install black
          python -m black .
      - name: Sort imports
        run: |
          python -m pip install isort
          python -m isort -y -rc semantic_release tests

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: improve code formatting'
          name: github-actions
          email: action@github.com

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [test, mypy, beautify]
    if: github.repository == 'relekang/python-semantic-release'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Python Semantic Release
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pypi_username: ${{ secrets.PYPI_USERNAME }}
        pypi_password: ${{ secrets.PYPI_PASSWORD }}
