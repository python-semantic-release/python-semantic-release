{%   from 'macros.md.j2' import format_commit_summary_line
%}{#
EXAMPLE:

### Features

- Add new feature ([#10](https://domain.com/namespace/repo/pull/10),
  [`abcdef0`](https://domain.com/namespace/repo/commit/HASH))

- **scope**: Add new feature ([`abcdef0`](https://domain.com/namespace/repo/commit/HASH))

### Fixes

- Fix bug ([#11](https://domain.com/namespace/repo/pull/11),
  [`abcdef1`](https://domain.com/namespace/repo/commit/HASH))

#}{%  set max_line_width = 100
%}{%  set hanging_indent = 2
%}{#
#}{%  for type_, commits in commit_objects if type_ != "unknown"
%}{#    PREPROCESS COMMITS (order by description & format description line)
#}{%    set commit_descriptions = []
%}{%    for commit in commits
%}{#      # Update the first line with reference links and if commit description
          # has more than one line, add the rest of the lines
          # NOTE: This is specifically to make sure to not hide contents
          # of squash commits (until parse support is added)
#}{%      set description = "- %s" | format(format_commit_summary_line(commit))
%}{%      if commit.descriptions | length > 1
%}{%        set description = "%s\n\n%s" | format(
              description, commit.descriptions[1:] | join("\n\n")
            )
%}{%      endif
%}{%      set description = description | autofit_text_width(max_line_width, hanging_indent)
%}{{      commit_descriptions.append(description) | default("", true)
}}{%    endfor
%}{#
   #    # PRINT SECTION (header & commits)
#}{{    "\n"
}}{{    "### %s\n" | format(type_ | title)
}}{{    "\n"
}}{{    "%s\n" | format(commit_descriptions | unique | join("\n\n"))
}}{%  endfor
%}
