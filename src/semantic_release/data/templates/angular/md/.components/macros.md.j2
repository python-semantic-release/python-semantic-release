{#
  MACRO: commit message links or PR/MR links of commit
#}{%  macro commit_msg_links(commit)
%}{%    if commit.error is undefined
%}{%      set commit_hash_link = "[`%s`](%s)" | format(
            commit.short_hash, commit.hexsha | commit_hash_url
          )
%}{#
#}{%      set summary_line = commit.descriptions[0] | safe
%}{%      set summary_line = [
            summary_line.split(" ", maxsplit=1)[0] | capitalize,
            summary_line.split(" ", maxsplit=1)[1]
          ] | join(" ")
%}{#
#}{%      if commit.linked_merge_request != ""
%}{#        # Add PR references with a link to the PR
#}{%        set pr_num = commit.linked_merge_request
%}{%        set pr_link = "[%s](%s)" | format(pr_num, pr_num | pull_request_url)
%}{#
   #        TODO: breaking change v10, remove summary line replacers as PSR will do it for us
#}{%        set summary_line = summary_line | replace("(pull request", "(") | replace("(" ~ pr_num ~ ")", "") | trim
%}{%        set summary_line = "%s (%s, %s)" | format(
              summary_line,
              pr_link,
              commit_hash_link,
            )
%}{#
          # DEFAULT: No PR identifier found, so just append commit hash as url to the commit summary_line
#}{%      else
%}{%        set summary_line = "%s (%s)" | format(summary_line, commit_hash_link)
%}{%      endif
%}{#
          # Return the modified summary_line
#}{{      summary_line
}}{%    endif
%}{%  endmacro
%}

{#
  MACRO: format commit summary line
#}{%  macro format_commit_summary_line(commit)
%}{#    # Check for Parsing Error
#}{%    if commit.error is undefined
%}{#
   #      # Add any message links to the commit summary line
#}{%      set summary_line = commit_msg_links(commit)
%}{#
#}{%      if commit.scope
%}{%        set summary_line = "**%s**: %s" | format(commit.scope, summary_line)
%}{%      endif
%}{#
   #      # Return the modified summary_line
#}{{      summary_line
}}{#
#}{%    else
%}{#      # Return the first line of the commit if there was a Parsing Error
#}{{      (commit.commit.message | string).split("\n", maxsplit=1)[0]
}}{%    endif
%}{%  endmacro
%}
