from __future__ import annotations

import os
import re

PYPI_WEB_DOMAIN = "pypi.org"

# https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
SEMVER_REGEX = re.compile(
    r"""
    (?P<major>0|[1-9]\d*)
    \.
    (?P<minor>0|[1-9]\d*)
    \.
    (?P<patch>0|[1-9]\d*)
    (?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?
    (?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?
    """,
    flags=re.VERBOSE,
)

PEP440_REGEX = re.compile(
    r"""
    v?
    (?:(?P<epoch>[0-9]+)!)?
    (?P<major>0|[1-9]\d*)
    \.
    (?P<minor>0|[1-9]\d*)
    \.
    (?P<patch>0|[1-9]\d*)
    (?:[-_\.]?(?P<prerelease>(?:(a|b|c|rc|alpha|beta|pre|preview|dev|post|rev|r))(?:[-_\.]?(?:[0-9]+))*))?
    (?:\+(?P<buildmetadata>[a-z0-9]+(?:[-_\.][a-z0-9]+)*))?
    """,
    flags=re.VERBOSE | re.IGNORECASE,
)

# PEP440_PATTERN = re.compile(
#     r"""
#     ^\s*
#     v?
#     (?:
#         (?:(?P<epoch>[0-9]+)!)?                           # epoch
#         (?P<release>[0-9]+(?:\.[0-9]+)*)                  # release segment
#         (?P<pre>                                          # pre-release
#             [-_\.]?
#             (?P<pre_l>(a|b|c|rc|alpha|beta|pre|preview))
#             [-_\.]?
#             (?P<pre_n>[0-9]+)?
#         )?
#         (?P<post>                                         # post release
#             (?:-(?P<post_n1>[0-9]+))
#             |
#             (?:
#                 [-_\.]?
#                 (?P<post_l>post|rev|r)
#                 [-_\.]?
#                 (?P<post_n2>[0-9]+)?
#             )
#         )?
#         (?P<dev>                                          # dev release
#             [-_\.]?
#             (?P<dev_l>dev)
#             [-_\.]?
#             (?P<dev_n>[0-9]+)?
#         )?
#     )
#     (?:\+(?P<local>[a-z0-9]+(?:[-_\.][a-z0-9]+)*))?       # local version
#     \s*$
#     """,
# )

COMMIT_MESSAGE = "{version}\n\nAutomatically generated by python-semantic-release"
DEFAULT_COMMIT_AUTHOR = "semantic-release <semantic-release>"
DEFAULT_VERSION = "0.0.0"

DEFAULT_SHELL: str | None = None
if os.name == "posix":
    DEFAULT_SHELL = os.getenv("SHELL", "/bin/sh")
elif os.name == "nt":
    DEFAULT_SHELL = os.getenv("COMSPEC")
